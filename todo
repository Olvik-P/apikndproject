+ API server  ()
• Django Users (Как работает базовая модель и как переопределять ее)
• DRF (Viewsets, Generics, Mixin) (Как работают viewsets и generics)
• DRF (Routing) (Как работает Router в DRF)
• DRF (Permissions) 
• DRF (Serializers) (Здесь тоже важно посмотреть как можно манипулировать данными и оставлять определенные поля только для чтения)
• One-to-Many relations in DB (ForeignKey) (При создании моделей какие отношения можно выстраивать между ними и обращаться друг к другу 
через prefetch_related и select_related)
• Распознать ссылку в QRCode.
• Пропарсить страницу и получить данные по проверке.
• Внести в базу.
• Path записи с измененным статусам, после парсинга страницы, если изменился (статусы - None, Ожидает завершения, Завершено)
• Удаление записи при обновлении статуса "Завершено"
• Через api добавление поля "Дата выезда", в формате - Дата, время.

+ Telegram bot ассистент
- Загрузка из ТВ QRCod через api.
• Проверка записей со статусом - None, раз в час.
• При изменении статуса, записать в базу, и уведомить в Телеграмм об изменении.
- Раз в день по статусам "Ожидает завершения"
• уведомить в Телеграмм за два дня до начала проверки, о проверке и необходимости уведомлении КЛ.
• Уведомить о назначении даты выезда
• Уведомить за день до выезда о выезде на объект.
• В день проверки уведомить о выезде.
• За день до окончания проверки уведомить об окончании КНМ.
• В день окончания Уведомить о необходимости составлении акта проверки и внесения в ЕРКНМ.

• • • 

